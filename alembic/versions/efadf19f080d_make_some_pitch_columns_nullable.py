"""Make some Pitch columns nullable

Revision ID: efadf19f080d
Revises: 0f528ae61ecc
Create Date: 2024-12-07 16:08:30.006601

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'efadf19f080d'
down_revision: Union[str, None] = '0f528ae61ecc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('pitches', 'pitch_type_code',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('pitches', 'pitch_type_description',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('pitches', 'zone',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('pitches', 'start_speed',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('pitches', 'start_speed',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('pitches', 'zone',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('pitches', 'pitch_type_description',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('pitches', 'pitch_type_code',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###
